[{"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/index.js":"1","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Home/index.js":"2","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Header/index.js":"3","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/store.js":"4","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/reducers/index.js":"5","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/sagas/index.js":"6","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Track/index.js":"7","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/HowItWorks/index.js":"8","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Documentation/index.js":"9","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Results/index.js":"10","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/reducers/models.js":"11","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/types/models.js":"12","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/actions/models.js":"13","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/sagas/models.js":"14","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/configuration.js":"15"},{"size":529,"mtime":1662624787681,"results":"16","hashOfConfig":"17"},{"size":1388,"mtime":1665695998389,"results":"18","hashOfConfig":"17"},{"size":1299,"mtime":1662538181661,"results":"19","hashOfConfig":"17"},{"size":1099,"mtime":1665693846495,"results":"20","hashOfConfig":"17"},{"size":426,"mtime":1665689051512,"results":"21","hashOfConfig":"17"},{"size":198,"mtime":1665691719777,"results":"22","hashOfConfig":"17"},{"size":987,"mtime":1665692119522,"results":"23","hashOfConfig":"17"},{"size":358,"mtime":1662537174720,"results":"24","hashOfConfig":"17"},{"size":281,"mtime":1662537083567,"results":"25","hashOfConfig":"17"},{"size":4878,"mtime":1665710317731,"results":"26","hashOfConfig":"17"},{"size":1485,"mtime":1665694908838,"results":"27","hashOfConfig":"17"},{"size":245,"mtime":1665690735820,"results":"28","hashOfConfig":"17"},{"size":498,"mtime":1665694923287,"results":"29","hashOfConfig":"17"},{"size":1140,"mtime":1665695187544,"results":"30","hashOfConfig":"17"},{"size":48,"mtime":1665693043336,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1u47jer",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/index.js",[],[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Home/index.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Header/index.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/store.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/reducers/index.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/sagas/index.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Track/index.js",["81"],[],"import { connect } from \"react-redux\";\nimport React, { Fragment, useState } from \"react\";\nimport { FileUploader } from \"react-drag-drop-files\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport * as actions from \"../../actions/models\";\nimport './styles.css'\n\n\nconst Track = ({onLoad}) => {\n    const fileTypes = [\"mp3\", \"wav\"];\n    const [loading, setLoading] = useState(false);\n    const handleChange = (file) => {\n        setLoading(true);\n        onLoad(file)\n    };\n    return (\n    <div className=\"track\">\n        <h1>\n            Find the genre \n        </h1>\n        <h2>\n        of your track\n        </h2>\n        {\n            !loading && \n            <FileUploader handleChange={handleChange} name=\"file\" types={fileTypes} />\n        }\n        <PuffLoader color={\"#67ab73\"} loading={loading} size={150} />\n    </div>\n)};\n\nexport default connect(\n  undefined,\n  dispatch => ({\n    onLoad(file) {\n        dispatch(actions.startModelApiCall(file)); \n    }\n  }),\n)(Track)","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/HowItWorks/index.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Documentation/index.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Results/index.js",["82","83"],[],"import { connect } from \"react-redux\";\nimport React, { Fragment, useState } from \"react\";\nimport {\n    MDBTabs,\n    MDBTabsItem,\n    MDBTabsLink,\n    MDBTabsContent,\n    MDBTabsPane\n  } from 'mdb-react-ui-kit';\nimport './styles.css'\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { getModelsData } from \"../../reducers\";\nimport * as actions from \"../../actions/models\";\n\n\nconst Results = ({data, onRestart}) => {\n    const [basicActive, setBasicActive] = useState(Object.keys(data).length == 0 ? '' : Object.keys(data)[0]);\n\n    const handleBasicClick = (value) => {\n\n        if (value === basicActive) {\n          return;\n        }\n    \n        setBasicActive(value);\n    };\n\n    return (\n    <div className=\"result\">\n        <h1>\n            Here is my guess!\n        </h1>\n        <h2>\n        BTW, nice sound!\n        </h2>\n        \n        {\n            Object.keys(data).length == 0 ?\n            <h1 className=\"error\">\n                Oops Your song was so great that it broke the internet!\n            </h1> :\n            <Fragment>\n                <MDBTabs className='mb-3'>\n                    {\n                        Object.keys(data).map(\n                            model => {\n                                return (\n                                    <MDBTabsItem key={model}>\n                                        <MDBTabsLink onClick={() => handleBasicClick(model)} active={basicActive === model}>\n                                            <h3>\n                                                {model}\n                                            </h3>\n                                        </MDBTabsLink>\n                                    </MDBTabsItem>\n                                )\n                            }\n                        )\n                    }\n                </MDBTabs>\n\n                <MDBTabsContent>\n                    {\n                        Object.keys(data).map(\n                            model => {\n                                return (\n                                    <MDBTabsPane show={basicActive === model} key={model}>\n                                        <div className=\"data\">\n                                            <div className=\"model\">\n                                                <div className=\"metrics\">\n                                                    <h2>\n                                                        {'Accuracy:'}\n                                                    </h2>\n                                                    <div style={{ width: 200, height: 200 }}>\n                                                        <CircularProgressbar value={data[model].metrics.accuracy*100} text={`${Math.round(data[model].metrics.accuracy*10000)/100}%`} />;\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"model_data\">\n                                                {Object.keys(data[model].data).map(\n                                                    genre => {\n                                                        return (\n                                                        <div className=\"label\" key={genre}>\n                                                            <h2>\n                                                                {genre + ' : ' + Math.round(data[model].data[genre]*10000)/100 + '%'}\n                                                            </h2>\n                                                            <ProgressBar completed={Math.round(data[model].data[genre]*10000)/100} />\n                                                        </div>\n                                                        )\n                                                    }\n                                                )}\n                                            </div>\n                                        </div>\n                                    \n                                    </MDBTabsPane>\n                                )\n                            }\n                        )\n                    }\n            </MDBTabsContent>\n            </Fragment>\n        }\n\n        <div onClick={()=>onRestart()} className=\"Button\">\n            <h2> Indentify more tracks »</h2>\n        </div>\n\n        \n    </div>\n)};\n\nexport default connect(\n    state => ({\n        data: getModelsData(state)!=null ? getModelsData(state) : {}\n    }),\n    dispatch => ({\n        onRestart() {\n            dispatch(actions.restartModelApiCall());  \n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        },\n    }),\n)(Results)","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/reducers/models.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/types/models.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/actions/models.js",[],[],"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/sagas/models.js",["84","85"],[],"import {\n    takeEvery,\n    put,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/models';\nimport * as types from '../types/models';\nimport axios from 'axios';\n\nimport { API_URL } from '../configuration';\n\nfunction* fetchModels(action) {\n\n    try {\n        const response = yield axios.post(\n          `${API_URL}`,\n          action.payload,\n          {\n            mode: 'cors',\n            headers: {\n                'Accept': '*/*',\n                'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW',\n            },\n          }\n        )\n        .then(response => {\n            if(response.status == 200){\n                if(response.success == false){\n                    return {}\n                } else {\n                    return response.data\n                }\n            }\n        })\n        yield put(actions.completeModelApiCall(response))\n    } catch (error) {\n        console.log(error)\n        yield put(actions.failModelApiCall(''))\n    }\n}\n  \nexport function* watchFetchModels() {\n    yield takeEvery(\n        types.MODEL_API_CALL_STARTED,\n        fetchModels,\n    );\n}","/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/configuration.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":2,"column":17,"nodeType":"88","messageId":"89","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":19,"column":77,"nodeType":"92","messageId":"93","endLine":19,"endColumn":79},{"ruleId":"90","severity":1,"message":"91","line":40,"column":38,"nodeType":"92","messageId":"93","endLine":40,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":27,"column":32,"nodeType":"92","messageId":"93","endLine":27,"endColumn":34},{"ruleId":"90","severity":1,"message":"91","line":28,"column":37,"nodeType":"92","messageId":"93","endLine":28,"endColumn":39},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]