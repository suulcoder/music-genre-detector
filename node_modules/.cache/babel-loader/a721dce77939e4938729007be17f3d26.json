{"ast":null,"code":"import { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actions from '../actions/models';\nimport * as types from '../types/models';\nimport { API_URL } from '../configuration';\n\nfunction* fetchModels(action) {\n  try {\n    console.log(\"im here bitch\");\n    const response = yield call(fetch, `${API_URL}`, {\n      method: 'POST',\n      body: action.payload,\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n\n    if (response.status === 200) {\n      const response = yield response.json();\n      yield put(actions.completeModelApiCall(response));\n    } else {\n      yield put(actions.failModelApiCall(''));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(actions.failModelApiCall(''));\n  }\n}\n\nexport function* watchFetchModels() {\n  yield takeEvery(types.MODEL_API_CALL_STARTED, fetchModels);\n}","map":{"version":3,"names":["call","takeEvery","put","actions","types","API_URL","fetchModels","action","console","log","response","fetch","method","body","payload","mode","headers","status","json","completeModelApiCall","failModelApiCall","error","watchFetchModels","MODEL_API_CALL_STARTED"],"sources":["/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/sagas/models.js"],"sourcesContent":["import {\n    call,\n    takeEvery,\n    put,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/models';\nimport * as types from '../types/models';\n\n\nimport { API_URL } from '../configuration';\n\nfunction* fetchModels(action) {\n\n    try {\n        console.log(\"im here bitch\")\n        const response = yield call(\n            fetch,  \n            `${API_URL}`,\n            {\n            method: 'POST',\n            body: action.payload,\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            },\n        );\n        if (response.status === 200) {\n            const response = yield response.json();\n            yield put(actions.completeModelApiCall(response))\n        } else {\n            yield put(actions.failModelApiCall(''))\n        }\n    } catch (error) {\n        console.log(error)\n        yield put(actions.failModelApiCall(''))\n    }\n  }\n  \n  export function* watchFetchModels() {\n    yield takeEvery(\n      types.MODEL_API_CALL_STARTED,\n      fetchModels,\n    );\n  }"],"mappings":"AAAA,SACIA,IADJ,EAEIC,SAFJ,EAGIC,GAHJ,QAIO,oBAJP;AAMA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AAGA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;EAE1B,IAAI;IACAC,OAAO,CAACC,GAAR,CAAY,eAAZ;IACA,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CACvBW,KADuB,EAEtB,GAAEN,OAAQ,EAFY,EAGvB;MACAO,MAAM,EAAE,MADR;MAEAC,IAAI,EAAEN,MAAM,CAACO,OAFb;MAGAC,IAAI,EAAE,MAHN;MAIAC,OAAO,EAAE;QACL,gBAAgB;MADX;IAJT,CAHuB,CAA3B;;IAYA,IAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B;MACzB,MAAMP,QAAQ,GAAG,MAAMA,QAAQ,CAACQ,IAAT,EAAvB;MACA,MAAMhB,GAAG,CAACC,OAAO,CAACgB,oBAAR,CAA6BT,QAA7B,CAAD,CAAT;IACH,CAHD,MAGO;MACH,MAAMR,GAAG,CAACC,OAAO,CAACiB,gBAAR,CAAyB,EAAzB,CAAD,CAAT;IACH;EACJ,CApBD,CAoBE,OAAOC,KAAP,EAAc;IACZb,OAAO,CAACC,GAAR,CAAYY,KAAZ;IACA,MAAMnB,GAAG,CAACC,OAAO,CAACiB,gBAAR,CAAyB,EAAzB,CAAD,CAAT;EACH;AACF;;AAED,OAAO,UAAUE,gBAAV,GAA6B;EAClC,MAAMrB,SAAS,CACbG,KAAK,CAACmB,sBADO,EAEbjB,WAFa,CAAf;AAID"},"metadata":{},"sourceType":"module"}