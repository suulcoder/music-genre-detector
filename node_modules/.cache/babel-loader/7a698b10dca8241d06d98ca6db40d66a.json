{"ast":null,"code":"var _jsxFileName = \"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Results/index.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { MDBTabs, MDBTabsItem, MDBTabsLink, MDBTabsContent, MDBTabsPane } from 'mdb-react-ui-kit';\nimport './styles.css';\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { getModelsData } from \"../../reducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data = {\n  \"model1\": {\n    \"data\": {\n      \"classical\": \"0.32583416\",\n      \"country\": \"0.20497286\",\n      \"metal\": \"0.0065581384\",\n      \"pop\": \"0.46263486\"\n    },\n    \"metrics\": {\n      \"accuracy\": \"0.7704485654830933\",\n      \"loss\": \"0.7446410059928894\\n\"\n    }\n  },\n  \"model2\": {\n    \"data\": {\n      \"classical\": \"0.0005395886\",\n      \"metal\": \"1.2948105e-08\",\n      \"pop\": \"0.009753511\",\n      \"reggae\": \"0.9897069\"\n    },\n    \"metrics\": {\n      \"accuracy\": \"0.7889181971549988\",\n      \"loss\": \"1.074156403541565\\n\"\n    }\n  },\n  \"success\": true\n};\n\nconst Results = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [basicActive, setBasicActive] = useState('tab1');\n\n  const handleBasicClick = value => {\n    if (value === basicActive) {\n      return;\n    }\n\n    setBasicActive(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here is my guess!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"BTW, nice sound!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MDBTabs, {\n      className: \"mb-3\",\n      children: Object.keys(data).map(model => {\n        return /*#__PURE__*/_jsxDEV(MDBTabsItem, {\n          children: /*#__PURE__*/_jsxDEV(MDBTabsLink, {\n            onClick: () => handleBasicClick(model),\n            active: basicActive === model,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: model\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n      children: [/*#__PURE__*/_jsxDEV(MDBTabsPane, {\n        show: basicActive === 'tab1',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrics\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: 'Accuracy:'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 200,\n                  height: 200\n                },\n                children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: data.model1.metrics.accuracy * 100,\n                  text: `${Math.round(data.model1.metrics.accuracy * 10000) / 100}%`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 29\n                }, this), \";\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model_data\",\n            children: Object.keys(data.model1.data).map(genre => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: genre + ' : ' + Math.round(data.model1.data[genre] * 10000) / 100 + '%'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                  completed: Math.round(data.model1.data[genre] * 10000) / 100\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBTabsPane, {\n        show: basicActive === 'tab2',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrics\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: 'Accuracy:'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 200,\n                  height: 200\n                },\n                children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: data.model2.metrics.accuracy * 100,\n                  text: `${Math.round(data.model2.metrics.accuracy * 10000) / 100}%`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 29\n                }, this), \";\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model_data\",\n            children: Object.keys(data.model2.data).map(genre => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: genre + ' : ' + Math.round(data.model2.data[genre] * 10000) / 100 + '%'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                  completed: Math.round(data.model2.data[genre] * 10000) / 100\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Results, \"k5gjsyBxw5p1qu3YLwgUPwmNhgY=\");\n\n_c = Results;\nexport default connect(state => ({\n  data: getModelsData(state)\n}), undefined)(Results);\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["connect","React","useState","MDBTabs","MDBTabsItem","MDBTabsLink","MDBTabsContent","MDBTabsPane","ProgressBar","CircularProgressbar","getModelsData","data","Results","basicActive","setBasicActive","handleBasicClick","value","Object","keys","map","model","width","height","model1","metrics","accuracy","Math","round","genre","model2","state","undefined"],"sources":["/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Results/index.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n    MDBTabs,\n    MDBTabsItem,\n    MDBTabsLink,\n    MDBTabsContent,\n    MDBTabsPane\n  } from 'mdb-react-ui-kit';\nimport './styles.css'\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { getModelsData } from \"../../reducers\";\n\nlet data = {\"model1\":{\"data\":{\"classical\":\"0.32583416\",\"country\":\"0.20497286\",\"metal\":\"0.0065581384\",\"pop\":\"0.46263486\"},\"metrics\":{\"accuracy\":\"0.7704485654830933\",\"loss\":\"0.7446410059928894\\n\"}},\"model2\":{\"data\":{\"classical\":\"0.0005395886\",\"metal\":\"1.2948105e-08\",\"pop\":\"0.009753511\",\"reggae\":\"0.9897069\"},\"metrics\":{\"accuracy\":\"0.7889181971549988\",\"loss\":\"1.074156403541565\\n\"}},\"success\":true}\n\nconst Results = ({data}) => {\n    const [basicActive, setBasicActive] = useState('tab1');\n\n    const handleBasicClick = (value) => {\n\n        if (value === basicActive) {\n          return;\n        }\n    \n        setBasicActive(value);\n    };\n\n    return (\n    <div className=\"result\">\n        <h1>\n            Here is my guess!\n        </h1>\n        <h2>\n        BTW, nice sound!\n        </h2>\n\n        <MDBTabs className='mb-3'>\n            {\n                Object.keys(data).map(\n                    model => {\n                        return (\n                            <MDBTabsItem>\n                                <MDBTabsLink onClick={() => handleBasicClick(model)} active={basicActive === model}>\n                                    <h3>\n                                        {model}\n                                    </h3>\n                                </MDBTabsLink>\n                            </MDBTabsItem>\n                        )\n                    }\n                )\n            }\n        </MDBTabs>\n\n      <MDBTabsContent>\n        <MDBTabsPane show={basicActive === 'tab1'}>\n            <div className=\"data\">\n                <div className=\"model\">\n                    <div className=\"metrics\">\n                        <h2>\n                            {'Accuracy:'}\n                        </h2>\n                        <div style={{ width: 200, height: 200 }}>\n                            <CircularProgressbar value={data.model1.metrics.accuracy*100} text={`${Math.round(data.model1.metrics.accuracy*10000)/100}%`} />;\n                        </div>\n                    </div>\n                </div>\n                <div className=\"model_data\">\n                    {Object.keys(data.model1.data).map(\n                        genre => {\n                            return (\n                            <div className=\"label\">\n                                <h2>\n                                    {genre + ' : ' + Math.round(data.model1.data[genre]*10000)/100 + '%'}\n                                </h2>\n                                <ProgressBar completed={Math.round(data.model1.data[genre]*10000)/100} />\n                            </div>\n                            )\n                        }\n                    )}\n                </div>\n            </div>\n           \n        </MDBTabsPane>\n        <MDBTabsPane show={basicActive === 'tab2'}>\n        <div className=\"data\">\n                <div className=\"model\">\n                    <div className=\"metrics\">\n                        <h2>\n                            {'Accuracy:'}\n                        </h2>\n                        <div style={{ width: 200, height: 200 }}>\n                            <CircularProgressbar value={data.model2.metrics.accuracy*100} text={`${Math.round(data.model2.metrics.accuracy*10000)/100}%`} />;\n                        </div>\n                    </div>\n                </div>\n                <div className=\"model_data\">\n                    {Object.keys(data.model2.data).map(\n                        genre => {\n                            return (\n                            <div className=\"label\">\n                                <h2>\n                                    {genre + ' : ' + Math.round(data.model2.data[genre]*10000)/100 + '%'}\n                                </h2>\n                                <ProgressBar completed={Math.round(data.model2.data[genre]*10000)/100} />\n                            </div>\n                            )\n                        }\n                    )}\n                </div>\n            </div>\n        </MDBTabsPane>\n      </MDBTabsContent>\n    </div>\n)};\n\nexport default connect(\n    state => ({\n        data: getModelsData(state)\n      }),\n    undefined,\n)(Results)"],"mappings":"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"},"metadata":{},"sourceType":"module"}