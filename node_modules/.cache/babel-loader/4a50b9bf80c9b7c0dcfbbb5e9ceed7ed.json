{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as types from '../types/models';\nexport const data = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.MODEL_API_CALL_STARTED:\n      {\n        return null;\n      }\n\n    case types.MODEL_API_CALL_COMPLETED:\n      {\n        console.log(action);\n        return action.payload;\n      }\n\n    case types.MODEL_API_CALL_FAILED:\n      {\n        return {};\n      }\n\n    case types.RESTART_API_CALL:\n      {\n        return null;\n      }\n\n    default:\n      return state;\n  }\n};\nexport const error = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.MODEL_API_CALL_STARTED:\n      {\n        return null;\n      }\n\n    case types.MODEL_API_CALL_COMPLETED:\n      {\n        return null;\n      }\n\n    case types.MODEL_API_CALL_FAILED:\n      {\n        return action.payload.error;\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.MODEL_API_CALL_STARTED:\n      {\n        return true;\n      }\n\n    case types.MODEL_API_CALL_COMPLETED:\n      {\n        return false;\n      }\n\n    case types.MODEL_API_CALL_FAILED:\n      {\n        return false;\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst models = combineReducers({\n  data,\n  isLoading,\n  error\n});\nexport default models;\nexport const getModelsData = state => state.data;\nexport const getModelsError = state => state.error;\nexport const getModelsIsLoading = state => state.isLoading;","map":{"version":3,"names":["combineReducers","types","data","state","action","type","MODEL_API_CALL_STARTED","MODEL_API_CALL_COMPLETED","console","log","payload","MODEL_API_CALL_FAILED","RESTART_API_CALL","error","isLoading","models","getModelsData","getModelsError","getModelsIsLoading"],"sources":["/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/reducers/models.js"],"sourcesContent":["import { combineReducers } from 'redux';\n\nimport * as types from '../types/models';\n\nexport const data = (state = null, action) => {\n    switch (action.type) {\n  \n      case types.MODEL_API_CALL_STARTED: {\n        return null;\n      }\n      case types.MODEL_API_CALL_COMPLETED: {\n        console.log(action)\n        return action.payload;\n      }\n      case types.MODEL_API_CALL_FAILED: {\n        return {};\n      }\n      case types.RESTART_API_CALL: {\n        return null\n      }\n      default:\n        return state;\n    }\n};\n\nexport const error = (state = null, action) => {\n    switch (action.type) {\n  \n      case types.MODEL_API_CALL_STARTED: {\n        return null;\n      }\n      case types.MODEL_API_CALL_COMPLETED: {\n        return null;\n      }\n      case types.MODEL_API_CALL_FAILED: {\n        return action.payload.error;\n      }\n      default:\n        return state;\n    }\n};\n\nconst isLoading = (state = false, action) => {\n    switch(action.type) {\n      case types.MODEL_API_CALL_STARTED: {\n        return true;\n      }\n      case types.MODEL_API_CALL_COMPLETED: {\n        return false;\n      }\n      case types.MODEL_API_CALL_FAILED: {\n        return false;\n      }\n      default:\n        return state;\n    }\n};\n\nconst models = combineReducers({\n    data,\n    isLoading,\n    error,\n});\n\nexport default models;\n\nexport const getModelsData = state => state.data;\nexport const getModelsError = state => state.error;\nexport const getModelsIsLoading = state => state.isLoading;"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AAEA,OAAO,MAAMC,IAAI,GAAG,YAA0B;EAAA,IAAzBC,KAAyB,uEAAjB,IAAiB;EAAA,IAAXC,MAAW;;EAC1C,QAAQA,MAAM,CAACC,IAAf;IAEE,KAAKJ,KAAK,CAACK,sBAAX;MAAmC;QACjC,OAAO,IAAP;MACD;;IACD,KAAKL,KAAK,CAACM,wBAAX;MAAqC;QACnCC,OAAO,CAACC,GAAR,CAAYL,MAAZ;QACA,OAAOA,MAAM,CAACM,OAAd;MACD;;IACD,KAAKT,KAAK,CAACU,qBAAX;MAAkC;QAChC,OAAO,EAAP;MACD;;IACD,KAAKV,KAAK,CAACW,gBAAX;MAA6B;QAC3B,OAAO,IAAP;MACD;;IACD;MACE,OAAOT,KAAP;EAhBJ;AAkBH,CAnBM;AAqBP,OAAO,MAAMU,KAAK,GAAG,YAA0B;EAAA,IAAzBV,KAAyB,uEAAjB,IAAiB;EAAA,IAAXC,MAAW;;EAC3C,QAAQA,MAAM,CAACC,IAAf;IAEE,KAAKJ,KAAK,CAACK,sBAAX;MAAmC;QACjC,OAAO,IAAP;MACD;;IACD,KAAKL,KAAK,CAACM,wBAAX;MAAqC;QACnC,OAAO,IAAP;MACD;;IACD,KAAKN,KAAK,CAACU,qBAAX;MAAkC;QAChC,OAAOP,MAAM,CAACM,OAAP,CAAeG,KAAtB;MACD;;IACD;MACE,OAAOV,KAAP;EAZJ;AAcH,CAfM;;AAiBP,MAAMW,SAAS,GAAG,YAA2B;EAAA,IAA1BX,KAA0B,uEAAlB,KAAkB;EAAA,IAAXC,MAAW;;EACzC,QAAOA,MAAM,CAACC,IAAd;IACE,KAAKJ,KAAK,CAACK,sBAAX;MAAmC;QACjC,OAAO,IAAP;MACD;;IACD,KAAKL,KAAK,CAACM,wBAAX;MAAqC;QACnC,OAAO,KAAP;MACD;;IACD,KAAKN,KAAK,CAACU,qBAAX;MAAkC;QAChC,OAAO,KAAP;MACD;;IACD;MACE,OAAOR,KAAP;EAXJ;AAaH,CAdD;;AAgBA,MAAMY,MAAM,GAAGf,eAAe,CAAC;EAC3BE,IAD2B;EAE3BY,SAF2B;EAG3BD;AAH2B,CAAD,CAA9B;AAMA,eAAeE,MAAf;AAEA,OAAO,MAAMC,aAAa,GAAGb,KAAK,IAAIA,KAAK,CAACD,IAArC;AACP,OAAO,MAAMe,cAAc,GAAGd,KAAK,IAAIA,KAAK,CAACU,KAAtC;AACP,OAAO,MAAMK,kBAAkB,GAAGf,KAAK,IAAIA,KAAK,CAACW,SAA1C"},"metadata":{},"sourceType":"module"}