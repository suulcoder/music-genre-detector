{"ast":null,"code":"import { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actions from '../actions/models';\nimport * as types from '../types/models';\nimport { API_URL } from '../configuration';\n\nfunction* fetchModels(action) {\n  try {\n    const token = yield select(selectors.getAuthToken);\n    const response = yield axios.post(`${API_BASE_URL}`, action.payload, {\n      mode: 'no-cors',\n      headers: {\n        'Accept': '*/*',\n        'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n      }\n    }).then(response => {\n      if (response.status == 201) {\n        window.location.href = URL + 'collection/' + response.data.id;\n      }\n    });\n  } catch (error) {\n    console.log(error);\n    yield put(actions.failModelApiCall(''));\n  }\n\n  try {\n    const response = yield call(fetch, `${API_URL}`, {\n      method: 'POST',\n      body: {},\n      mode: 'no-cors',\n      headers: {\n        'Accept': '*/*'\n      }\n    });\n    console.log(response.status);\n\n    if (response.status === 200) {\n      console.log(response);\n      const response = yield response.json();\n      console.log(response);\n\n      if (response.success == false) {\n        yield put(actions.failModelApiCall(''));\n      } else {\n        yield put(actions.completeModelApiCall(response));\n      }\n    } else {\n      yield put(actions.failModelApiCall(''));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(actions.failModelApiCall(''));\n  }\n}\n\nexport function* watchFetchModels() {\n  yield takeEvery(types.MODEL_API_CALL_STARTED, fetchModels);\n}","map":{"version":3,"names":["call","takeEvery","put","actions","types","API_URL","fetchModels","action","token","select","selectors","getAuthToken","response","axios","post","API_BASE_URL","payload","mode","headers","then","status","window","location","href","URL","data","id","error","console","log","failModelApiCall","fetch","method","body","json","success","completeModelApiCall","watchFetchModels","MODEL_API_CALL_STARTED"],"sources":["/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/sagas/models.js"],"sourcesContent":["import {\n    call,\n    takeEvery,\n    put,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/models';\nimport * as types from '../types/models';\n\n\nimport { API_URL } from '../configuration';\n\nfunction* fetchModels(action) {\n\n    try {\n        const token = yield select(selectors.getAuthToken);\n        const response = yield axios.post(\n          `${API_BASE_URL}`,\n          action.payload,\n          {\n            mode: 'no-cors',\n            headers: {\n                'Accept': '*/*',\n                'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW',\n            },\n          }\n        )\n        .then(response => {\n            if(response.status == 201){\n                window.location.href = URL + 'collection/' + response.data.id\n            }\n        })\n    } catch (error) {\n        console.log(error)\n        yield put(actions.failModelApiCall(''))\n    }\n\n    try {\n        const response = yield call(\n            fetch,  \n            `${API_URL}`,\n            {\n            method: 'POST',\n            body: {},\n            mode: 'no-cors',\n            headers: {\n                'Accept': '*/*',\n            },\n            },\n        );\n        console.log(response.status)\n        if (response.status === 200) {\n            console.log(response)\n            const response = yield response.json();\n            console.log(response)\n            if(response.success == false){\n                yield put(actions.failModelApiCall(''))\n            } else {\n                yield put(actions.completeModelApiCall(response))\n            }\n        } else {\n            yield put(actions.failModelApiCall(''))\n        }\n    } catch (error) {\n        console.log(error)\n        yield put(actions.failModelApiCall(''))\n    }\n}\n  \nexport function* watchFetchModels() {\n    yield takeEvery(\n        types.MODEL_API_CALL_STARTED,\n        fetchModels,\n    );\n}"],"mappings":"AAAA,SACIA,IADJ,EAEIC,SAFJ,EAGIC,GAHJ,QAIO,oBAJP;AAMA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AAGA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;EAE1B,IAAI;IACA,MAAMC,KAAK,GAAG,MAAMC,MAAM,CAACC,SAAS,CAACC,YAAX,CAA1B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAN,CACpB,GAAEC,YAAa,EADK,EAErBR,MAAM,CAACS,OAFc,EAGrB;MACEC,IAAI,EAAE,SADR;MAEEC,OAAO,EAAE;QACL,UAAU,KADL;QAEL,gBAAgB;MAFX;IAFX,CAHqB,EAWtBC,IAXsB,CAWjBP,QAAQ,IAAI;MACd,IAAGA,QAAQ,CAACQ,MAAT,IAAmB,GAAtB,EAA0B;QACtBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBC,GAAG,GAAG,aAAN,GAAsBZ,QAAQ,CAACa,IAAT,CAAcC,EAA3D;MACH;IACJ,CAfsB,CAAvB;EAgBH,CAlBD,CAkBE,OAAOC,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,MAAMzB,GAAG,CAACC,OAAO,CAAC2B,gBAAR,CAAyB,EAAzB,CAAD,CAAT;EACH;;EAED,IAAI;IACA,MAAMlB,QAAQ,GAAG,MAAMZ,IAAI,CACvB+B,KADuB,EAEtB,GAAE1B,OAAQ,EAFY,EAGvB;MACA2B,MAAM,EAAE,MADR;MAEAC,IAAI,EAAE,EAFN;MAGAhB,IAAI,EAAE,SAHN;MAIAC,OAAO,EAAE;QACL,UAAU;MADL;IAJT,CAHuB,CAA3B;IAYAU,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACQ,MAArB;;IACA,IAAIR,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;MACzBQ,OAAO,CAACC,GAAR,CAAYjB,QAAZ;MACA,MAAMA,QAAQ,GAAG,MAAMA,QAAQ,CAACsB,IAAT,EAAvB;MACAN,OAAO,CAACC,GAAR,CAAYjB,QAAZ;;MACA,IAAGA,QAAQ,CAACuB,OAAT,IAAoB,KAAvB,EAA6B;QACzB,MAAMjC,GAAG,CAACC,OAAO,CAAC2B,gBAAR,CAAyB,EAAzB,CAAD,CAAT;MACH,CAFD,MAEO;QACH,MAAM5B,GAAG,CAACC,OAAO,CAACiC,oBAAR,CAA6BxB,QAA7B,CAAD,CAAT;MACH;IACJ,CATD,MASO;MACH,MAAMV,GAAG,CAACC,OAAO,CAAC2B,gBAAR,CAAyB,EAAzB,CAAD,CAAT;IACH;EACJ,CA1BD,CA0BE,OAAOH,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,MAAMzB,GAAG,CAACC,OAAO,CAAC2B,gBAAR,CAAyB,EAAzB,CAAD,CAAT;EACH;AACJ;;AAED,OAAO,UAAUO,gBAAV,GAA6B;EAChC,MAAMpC,SAAS,CACXG,KAAK,CAACkC,sBADK,EAEXhC,WAFW,CAAf;AAIH"},"metadata":{},"sourceType":"module"}