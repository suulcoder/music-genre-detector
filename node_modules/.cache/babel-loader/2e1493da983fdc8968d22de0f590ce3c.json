{"ast":null,"code":"import { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actions from '../actions/models';\nimport * as types from '../types/models';\nimport { API_URL } from '../configuration';\n\nfunction* fetchModels(action) {\n  try {\n    const response = yield call(fetch, `${API_URL}`, {\n      method: 'POST',\n      body: action.payload,\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n\n    if (response.status === 200) {\n      const response = yield response.json();\n      yield put(actions.completeModelApiCall(response));\n    } else {\n      yield put(actions.failModelApiCall(''));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(actions.failModelApiCall(''));\n  }\n}\n\nexport function* watchFetchModels() {\n  yield takeEvery(types.MODEL_API_CALL_STARTED, fetchModels);\n}","map":{"version":3,"names":["call","takeEvery","put","actions","types","API_URL","fetchModels","action","response","fetch","method","body","payload","mode","headers","status","json","completeModelApiCall","failModelApiCall","error","console","log","watchFetchModels","MODEL_API_CALL_STARTED"],"sources":["/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/sagas/models.js"],"sourcesContent":["import {\n    call,\n    takeEvery,\n    put,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/models';\nimport * as types from '../types/models';\n\n\nimport { API_URL } from '../configuration';\n\nfunction* fetchModels(action) {\n\n    try {\n      const response = yield call(\n        fetch,  \n        `${API_URL}`,\n        {\n          method: 'POST',\n          body: action.payload,\n          mode: 'cors',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        },\n      );\n      if (response.status === 200) {\n        const response = yield response.json();\n        yield put(actions.completeModelApiCall(response))\n      } else {\n        yield put(actions.failModelApiCall(''))\n      }\n    } catch (error) {\n      console.log(error)\n      yield put(actions.failModelApiCall(''))\n    }\n  }\n  \n  export function* watchFetchModels() {\n    yield takeEvery(\n      types.MODEL_API_CALL_STARTED,\n      fetchModels,\n    );\n  }"],"mappings":"AAAA,SACIA,IADJ,EAEIC,SAFJ,EAGIC,GAHJ,QAIO,oBAJP;AAMA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AAGA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;EAE1B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,IAAI,CACzBS,KADyB,EAExB,GAAEJ,OAAQ,EAFc,EAGzB;MACEK,MAAM,EAAE,MADV;MAEEC,IAAI,EAAEJ,MAAM,CAACK,OAFf;MAGEC,IAAI,EAAE,MAHR;MAIEC,OAAO,EAAE;QACP,gBAAgB;MADT;IAJX,CAHyB,CAA3B;;IAYA,IAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B;MAC3B,MAAMP,QAAQ,GAAG,MAAMA,QAAQ,CAACQ,IAAT,EAAvB;MACA,MAAMd,GAAG,CAACC,OAAO,CAACc,oBAAR,CAA6BT,QAA7B,CAAD,CAAT;IACD,CAHD,MAGO;MACL,MAAMN,GAAG,CAACC,OAAO,CAACe,gBAAR,CAAyB,EAAzB,CAAD,CAAT;IACD;EACF,CAnBD,CAmBE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,MAAMjB,GAAG,CAACC,OAAO,CAACe,gBAAR,CAAyB,EAAzB,CAAD,CAAT;EACD;AACF;;AAED,OAAO,UAAUI,gBAAV,GAA6B;EAClC,MAAMrB,SAAS,CACbG,KAAK,CAACmB,sBADO,EAEbjB,WAFa,CAAf;AAID"},"metadata":{},"sourceType":"module"}