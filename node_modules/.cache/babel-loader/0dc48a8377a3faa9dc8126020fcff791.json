{"ast":null,"code":"var _jsxFileName = \"/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Results/index.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { MDBTabs, MDBTabsItem, MDBTabsLink, MDBTabsContent, MDBTabsPane } from 'mdb-react-ui-kit';\nimport './styles.css';\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { getModelsData } from \"../../reducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data = {\n  \"model1\": {\n    \"data\": {\n      \"classical\": \"0.32583416\",\n      \"country\": \"0.20497286\",\n      \"metal\": \"0.0065581384\",\n      \"pop\": \"0.46263486\"\n    },\n    \"metrics\": {\n      \"accuracy\": \"0.7704485654830933\",\n      \"loss\": \"0.7446410059928894\\n\"\n    }\n  },\n  \"model2\": {\n    \"data\": {\n      \"classical\": \"0.0005395886\",\n      \"metal\": \"1.2948105e-08\",\n      \"pop\": \"0.009753511\",\n      \"reggae\": \"0.9897069\"\n    },\n    \"metrics\": {\n      \"accuracy\": \"0.7889181971549988\",\n      \"loss\": \"1.074156403541565\\n\"\n    }\n  },\n  \"success\": true\n};\n\nconst Results = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [basicActive, setBasicActive] = useState('tab1');\n\n  const handleBasicClick = value => {\n    if (value === basicActive) {\n      return;\n    }\n\n    setBasicActive(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here is my guess!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"BTW, nice sound!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MDBTabs, {\n      className: \"mb-3\",\n      children: Object.keys(data).map(model => {\n        return /*#__PURE__*/_jsxDEV(MDBTabsItem, {\n          children: /*#__PURE__*/_jsxDEV(MDBTabsLink, {\n            onClick: () => handleBasicClick(model),\n            active: basicActive === model,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: model\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n      children: Object.keys(data).map(model => {\n        return /*#__PURE__*/_jsxDEV(MDBTabsPane, {\n          show: basicActive === model,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"model\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrics\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: 'Accuracy:'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: 200,\n                    height: 200\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                    value: data[model].metrics.accuracy * 100,\n                    text: `${Math.round(data[model].metrics.accuracy * 10000) / 100}%`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 49\n                  }, this), \";\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"model_data\",\n              children: Object.keys(data[model].data).map(genre => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: genre + ' : ' + Math.round(data[model].data[genre] * 10000) / 100 + '%'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                    completed: Math.round(data[model].data[genre] * 10000) / 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Results, \"k5gjsyBxw5p1qu3YLwgUPwmNhgY=\");\n\n_c = Results;\nexport default connect(state => ({\n  data: getModelsData(state)\n}), undefined)(Results);\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["connect","React","useState","MDBTabs","MDBTabsItem","MDBTabsLink","MDBTabsContent","MDBTabsPane","ProgressBar","CircularProgressbar","getModelsData","data","Results","basicActive","setBasicActive","handleBasicClick","value","Object","keys","map","model","width","height","metrics","accuracy","Math","round","genre","state","undefined"],"sources":["/Users/saulcontreras/Desktop/Tesis/music-genre-detector/src/components/Results/index.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n    MDBTabs,\n    MDBTabsItem,\n    MDBTabsLink,\n    MDBTabsContent,\n    MDBTabsPane\n  } from 'mdb-react-ui-kit';\nimport './styles.css'\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { getModelsData } from \"../../reducers\";\n\nlet data = {\"model1\":{\"data\":{\"classical\":\"0.32583416\",\"country\":\"0.20497286\",\"metal\":\"0.0065581384\",\"pop\":\"0.46263486\"},\"metrics\":{\"accuracy\":\"0.7704485654830933\",\"loss\":\"0.7446410059928894\\n\"}},\"model2\":{\"data\":{\"classical\":\"0.0005395886\",\"metal\":\"1.2948105e-08\",\"pop\":\"0.009753511\",\"reggae\":\"0.9897069\"},\"metrics\":{\"accuracy\":\"0.7889181971549988\",\"loss\":\"1.074156403541565\\n\"}},\"success\":true}\n\nconst Results = ({data}) => {\n    const [basicActive, setBasicActive] = useState('tab1');\n\n    const handleBasicClick = (value) => {\n\n        if (value === basicActive) {\n          return;\n        }\n    \n        setBasicActive(value);\n    };\n\n    return (\n    <div className=\"result\">\n        <h1>\n            Here is my guess!\n        </h1>\n        <h2>\n        BTW, nice sound!\n        </h2>\n\n        <MDBTabs className='mb-3'>\n            {\n                Object.keys(data).map(\n                    model => {\n                        return (\n                            <MDBTabsItem>\n                                <MDBTabsLink onClick={() => handleBasicClick(model)} active={basicActive === model}>\n                                    <h3>\n                                        {model}\n                                    </h3>\n                                </MDBTabsLink>\n                            </MDBTabsItem>\n                        )\n                    }\n                )\n            }\n        </MDBTabs>\n\n        <MDBTabsContent>\n            {\n                Object.keys(data).map(\n                    model => {\n                        return (\n                            <MDBTabsPane show={basicActive === model}>\n                                <div className=\"data\">\n                                    <div className=\"model\">\n                                        <div className=\"metrics\">\n                                            <h2>\n                                                {'Accuracy:'}\n                                            </h2>\n                                            <div style={{ width: 200, height: 200 }}>\n                                                <CircularProgressbar value={data[model].metrics.accuracy*100} text={`${Math.round(data[model].metrics.accuracy*10000)/100}%`} />;\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"model_data\">\n                                        {Object.keys(data[model].data).map(\n                                            genre => {\n                                                return (\n                                                <div className=\"label\">\n                                                    <h2>\n                                                        {genre + ' : ' + Math.round(data[model].data[genre]*10000)/100 + '%'}\n                                                    </h2>\n                                                    <ProgressBar completed={Math.round(data[model].data[genre]*10000)/100} />\n                                                </div>\n                                                )\n                                            }\n                                        )}\n                                    </div>\n                                </div>\n                            \n                            </MDBTabsPane>\n                        )\n                    }\n                )\n            }\n      </MDBTabsContent>\n    </div>\n)};\n\nexport default connect(\n    state => ({\n        data: getModelsData(state)\n      }),\n    undefined,\n)(Results)"],"mappings":"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"},"metadata":{},"sourceType":"module"}